# -*- coding: utf-8 -*-
"""Moringa_Data_Science_Core_W7_Independent_Project_2021_10_Ted_Kimani_Exploratory Data Analysis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JmvF8JTcJUfxfK9xsld1FWtzfX2K4zkl

# Friday: Independent Project - Week 2

# Assessment


Financial Inclusion remains one of the main obstacles to economic and human development in Africa. For example, across Kenya, Rwanda, Tanzania, and Uganda only 9.1 million adults (or 13.9% of the adult population) have access to or use a commercial bank account.

Traditionally, access to bank accounts has been regarded as an indicator of financial inclusion. Despite the proliferation of mobile money in Africa and the growth of innovative fintech solutions, banks still play a pivotal role in facilitating access to financial services. Access to bank accounts enables households to save and facilitate payments while also helping businesses build up their credit-worthiness and improve their access to other financial services. Therefore, access to bank accounts is an essential contributor to long-term economic growth.

The research problem is to figure out how we can predict which individuals are most likely to have or use a bank account. Your solution will help provide an indication of the state of financial inclusion in Kenya, Rwanda, Tanzania, and Uganda, while providing insights into some of the key demographic factors that might drive individuals’ financial outcomes.

In order to work on the above problem, you need to do the following:

Define the question, the metric for success, the context, experimental design taken and the appropriateness of the available data to answer the given question
Find and deal with outliers, anomalies, and missing data within the dataset.
Perform univariate, bivariate and multivariate analysis recording your observations.
Implement the solution by performing the respective analysis i.e. factor analysis, principal component analysis, and discriminant analysis.
Challenge your solution by providing insights on how you can make improvements.

# Dataset

The main dataset contains demographic information and what financial services are used by individuals across East Africa. This data was extracted from various Finscope surveys ranging from 2016 to 2018, and more information about these surveys can be found here:

FinAccess Kenya 2018. [Link] (Links to an external site.)
Finscope Rwanda 2016. [Link] (Links to an external site.)
Finscope Tanzania 2017. [Link] (Links to an external site.)
Finscope Uganda 2018. [Link] (Links to an external site.)
Dataset Files:

Variable Definitions: http://bit.ly/VariableDefinitions (Links to an external site.) 
Dataset: http://bit.ly/FinancialDataset (Links to an external site.)

# 1. Defining the Question

 A) Specifiying the Data Analytic Question 

 *Which individuals are most likely to have or use a bank account.*

B) Defining the metric for Sucess

A clear definition of which demographic type(s) of East Africans have or could use bank account

C) Understanding the context 

The countries in question are closely situated in East African and have close economic ties

D) Recording the Experimental Design

E) Data Relevance

The data is still relevant as it was collected betwen 2016 and 2018, its currently 2021

#2. Reading the Data
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

finDf = pd.read_csv("/content/Financial Dataset - 1.csv")

"""##3. Checking the data"""

#Number of records in the dataset
finDf.shape

#The top of the Dataset
finDf.head()

#The bottom of the dataset
finDf.tail()

#checking each collums has an appropriate datatype
finDf.info()

"""#4. External Data source Validation

Making sure your data matches something outside of the dataset is very important. It allows you to ensure that the measurements are roughly in line with what they should be and it serves as a check on what other things might be wrong in your dataset. External validation can often be as simple as checking your data against a single number, as we will do here.


The surveys only collected data rom respondents who were of age 16 and olde, this is confimed by all the webpages of the surveys affirming this fact. We will confirm with the dataset
"""

#Finding if any respondents age is below 16
(finDf['Respondent Age'] < 16).any()

"""#5. Tidying the dataset"""

#Checking for outliers
finDf.describe()

x = finDf['year']
y = finDf['Respondent Age']
sns.boxplot(x=x,y=y ,data= finDf)

x = finDf['year']
y = finDf['household_size']
sns.boxplot(x=x,y=y ,data= finDf)

#Checking for missing data
finDf.isnull().any()

#Identifing the null values
finDf.isnull().sum()

#dropping the null values
#there are 23,000 rows
dfE = finDf.dropna()
dfE.info()

dfE.duplicated().sum()

"""#6. Exploratory Analysis

Univariate analysis - as the data question said, the aim to is to find whch types of individual use bank accounts. Using the categorical variable for "Has a bank account" will be of primary focus

A) Univariate Analysis
"""

sns.histplot(data = dfE, x='Has a Bank account')
plt.title('Number of respondents with bank accounts')

yes =(dfE['Has a Bank account'] == 'Yes').sum()
no = (dfE['Has a Bank account'] == 'No').sum()
labels = 'yes','no'
sizes = [yes,no]
explode = (0, 0.1)
plt.pie(sizes,explode=explode, labels=labels, autopct='%1.1f%%', shadow = True)

plt.title("Number of bank account holders")
plt.show()

#describing the numerica data columns
dfE.describe()

sns.distplot(dfE['Respondent Age'])

sns.distplot(dfE['year'])

sns.distplot(dfE['household_size'])

#Their variance
dfE[['year','household_size','Respondent Age']].var()

#Their skew
dfE[['year','household_size','Respondent Age']].skew()
#all the coullumns are positively skewed

#Their kurtosis
dfE[['year','household_size','Respondent Age']].kurt()
#the data coulumns are of a leptokurtic distribution

"""Recommendations

From the inital graph we can see majority of the respondents in the data set do not have a bank account. Only 14% of them do. 

From the statistical calculations done we managed to desphier more patterns from the data set, such as most of the respondents ages range from 49 to 26 years % most household are betwen 2 and 5 in size

# B) Bivariate Analysis
"""

dfE.head()

#Most of the collumns in the dataset are categorical, we will now implement those techniques 
dfE.corr()
#The values for correlation are quite snmall and negative showing a slight correlation

sns.histplot(data = dfE, hue='Has a Bank account', x='country', palette='rainbow')
plt.title('Number of respondents')

locs = dfE['country']
age = dfE['Respondent Age']
account = dfE['Has a Bank account']
plt.figure(figsize=(12,10))

sns.stripplot(x=locs, y=age, data =dfE, hue=account, dodge=True )
#The graph below shows the dispersion of the data, it is mapping responents ages against their home country. 
#The hues separate them by who has a bank account
#The most country with bank accounts is kenya,mostly in the age group of 20 to 80, with the least being uganda
#

jobs = dfE['Type of Job']
age = dfE['Respondent Age']
account = dfE['Has a Bank account']
plt.figure(figsize=(25,15))

sns.stripplot(x=jobs, y=age, data =dfE, hue=account, dodge=True )
#The below graph shows the spread of data of ages againts employment type
#From it we can tell the self employeed and farmers & fishers
#With people with no income having the least representatives

#The below graph llustrates the average of of reposndents per country and each line represents who has a bank account or not
plt.figure(figsize=(8,5))
sns.pointplot(x=locs, y=age,data=dfE, hue=account)
#We can see most of kenyas bank holders are betwen 42 and 40, Rwanda 38 and 40, Tanzania 37 and 40 & Uganda 33 and 37

size = dfE['household_size']
plt.figure(figsize=(8,5))
sns.pointplot(x=locs, y=size,data=dfE, hue=account)
#This graph represents the average size of households that have bank accounts, Kenya at 3.4, Rwanda at 4.5, Tanzania at < 2, Uganda at above 4.5

"""*Recommendations*

The countrys with the most bankers seems to be kenya, followed by Rwanda, then Tanzania and finally Uganda. This shows the more likely demographic a bank holder could be in

#C)  Multivariate Analysis

Data Reduction

**Factor Analysis**
"""

#The first step will be to get rid of the outliers values, select columns with categorical data
dfE.describe()

df = dfE
df

df.shape

df.info()

#Adequacy Test
# Before we perform factor analysis,weyou need to evaluate the “factorability” of our dataset. 
# Factorability means "can we found the factors in the dataset?". 
# There are two methods to check the factorability or sampling adequacy:
# - Bartlett’s Test
# - Kaiser-Meyer-Olkin Test
# ---
# Bartlett’s test of sphericity checks whether or not the observed variables intercorrelate at all 
# using the observed correlation matrix against the identity matrix. If the test found statistically insignificant, 
# we should not employ a factor analysis.
# ---

# Installing factor analyzer 
!pip install factor_analyzer==0.2.3

from factor_analyzer.factor_analyzer import calculate_bartlett_sphericity

chi_square_value,p_value=calculate_bartlett_sphericity(df)
chi_square_value, p_value

"""With a p result of 0, the test was statistically significant, this inidicates there is sufficuent evidence to assume the observed distribution is not the same as the expected distribution. There might be a relationship betwen the categorical variables"""

from factor_analyzer.factor_analyzer import calculate_kmo

kmo_all,kmo_model=calculate_kmo(df)

"""This shows the technique chosen is not right for the dataset

#Moving onto Discriminant Analysis
"""

df2 = dfE
df2.info()

cleanup = {"Cell Phone Access": {'Yes':1, 'No':0},
           'Has a Bank account': {'No': 0, 'Yes':1},
           'Type of Location': {'Rural':0, "Urban":1},
           'gender_of_respondent': {'Female':0, "Male":1},
           'The relathip with head' : {'Head of Household':0, 'Spouse':1, 'Child':2, 'Parent':3, 'Other relative':4, 'Other non-relatives':5},
           'marital_status': {'Married/Living together':0, 'Single/Never Married':1, 'Widowed':2,'Divorced/Seperated':3, 'Dont know':4},
           'Level of Educuation' : {'Primary education':0, 'No formal education':1, 'Secondary education':2,'Tertiary education':3,'Vocational/Specialised training':4,'6':5,'Other/Dont know/RTA':6},
           'Type of Job' : {'Self employed':0, 'Informally employed':1,'Farming and Fishing':2, 'Remittance Dependent':3, 'Other Income':4, 'Formally employed Private':5,'Government Dependent':6,'Dont Know/Refuse to answer':7,'No Income':8, 'Formally employed Government':9}
           }

df2 = df2.replace(cleanup)
df2.head()

Y = df2.iloc[:, 2:3]
Y

X = df2.drop(['Has a Bank account','uniqueid'], axis = 1)
X.tail()

#Diving the data into training and test sets
#
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,Y, test_size= 0.3, random_state=0)

#Feature Scaling
#
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
lda = LDA(n_components=1)
X_train = lda.fit_transform(X_train, y_train)
X_test = lda.transform(X_test)

from sklearn.ensemble import RandomForestClassifier

classifier = RandomForestClassifier(max_depth=2, random_state=0)
classifier.fit(X_train, y_train)
y_pred = classifier.predict(X_test)

from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score

cm = confusion_matrix(y_test, y_pred)
print(cm)
print('Accuracy' + str(accuracy_score(y_test, y_pred)))

"""The model has achieved an accuracy score of 88% in predicting which type of individual based of the dataset provided will most likely have a bank account"""

